{"version":3,"sources":["service.js","UserContext.js","Signup.jsx","Login.jsx","ProtectedRoute.js","Dashboard.jsx","ForgotPassword.jsx","ResendConfirmation.jsx","ResetPassword.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","setToken","token","JSON","parse","localStorage","getItem","Axios","defaults","headers","common","idToken","jwtToken","refreshToken","a","getUser","Username","payload","email","put","data","setItem","stringify","login","Password","post","updateData","UserContext","createContext","PASSWORD_REGEX","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","location","useLocation","params","URLSearchParams","search","useState","get","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","confirmationCode","setConfirmationCode","loading","setLoading","error","setError","navigate","useNavigate","setUser","useContext","handleConfirm","event","preventDefault","match","ConfirmationCode","type","replace","response","Container","component","maxWidth","className","Avatar","Typography","variant","noValidate","onSubmit","Box","marginY","hidden","Alert","severity","Grid","container","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","value","onChange","target","Button","color","disabled","CircularProgress","justify","Link","RouterLink","to","Login","handleSubmit","code","state","message","ProtectedRoute","children","rest","user","Dashboard","setData","snackbar","useSnackbar","enqueueSnackbar","useEffect","fetchData","columns","title","field","editComponent","props","multiline","e","handleUpdate","newData","oldData","prevData","fieldName","fieldValue","handleDelete","justifyContent","onClick","clear","window","array","key","push","mapData","options","actionsColumnIndex","maxBodyHeight","isLoading","editable","onRowUpdate","onRowDelete","ForgotPassword","ResendConfirmation","ResetPassword","newPassword","verificationCode","App","refresh","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","maxSnack","document","getElementById"],"mappings":"uXAEMA,EAAM,+DAECC,EAAW,WACtB,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAChC,OAAVJ,IACFK,IAAMC,SAASC,QAAQC,OAAvB,cAAiDR,EAAMS,QAAQC,WAInEX,IAmBO,IAAMY,EAAY,uCAAG,oCAAAC,EAAA,yDAEZ,QADRZ,EAAQa,KADY,wDAKpBC,EAAWd,EAAMS,QAAQM,QAAQC,MACjCL,EAAeX,EAAMW,aAND,SAOHN,IAAMY,IAAInB,EAAM,SAAU,CAAEgB,WAAUH,iBAPnC,gBAOlBO,EAPkB,EAOlBA,KACRf,aAAagB,QAAQ,QAASlB,KAAKmB,UAAUF,IAC7Cb,IAAMC,SAASC,QAAQC,OAAvB,cAAiDU,EAAKT,QAAQC,SATpC,4CAAH,qDAYZW,EAAK,uCAAG,WAAOP,EAAUQ,GAAjB,iBAAAV,EAAA,sEACIP,IAAMkB,KAAKzB,EAAM,SAAU,CAAEgB,WAAUQ,aAD3C,gBACXJ,EADW,EACXA,KACRf,aAAagB,QAAQ,QAASlB,KAAKmB,UAAUF,IAF1B,2CAAH,wDAkCLM,EAAa,SAACN,GACzB,OAAOb,IAAMkB,KAAKzB,EAAM,gBAAjB,eAAuCoB,KAGnCL,EAAU,WAErB,OAAc,OADAV,aAAaC,QAAQ,SAE1B,KAEFH,KAAKC,MAAMC,aAAaC,QAAQ,WCpF5BqB,EAAcC,wBAAc,MCenCC,EAAiB,gGAEjBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASa,IACtB,IAAMC,EAAUnB,IACVoB,EAAWC,cACXC,EAAS,IAAIC,gBAAgBH,EAASI,QAHb,EAKCC,mBAASH,EAAOI,IAAI,aAAe,IALpC,mBAKxBC,EALwB,KAKdC,EALc,OAMCH,mBAAS,IANV,mBAMxBI,EANwB,KAMdC,EANc,OAOeL,mBAAS,IAPxB,mBAOxBM,EAPwB,KAOPC,EAPO,OAQiBP,mBAC9CH,EAAOI,IAAI,qBAAuB,IATL,mBAQxBO,EARwB,KAQNC,EARM,OAWDT,oBAAS,GAXR,mBAWxBU,EAXwB,KAWfC,EAXe,OAYLX,mBAAS,MAZJ,mBAYxBY,EAZwB,KAYjBC,EAZiB,KAczBC,EAAWC,cAETC,GAAYC,qBAAW7C,GAAvB4C,QAgBFE,GAAa,uCAAG,WAAOC,GAAP,eAAA5D,EAAA,yDACpBsD,EAAS,MACTM,EAAMC,iBAfFhB,IAAaE,GACfO,EAAS,yBACF,GAEJT,EAASiB,MAAM/C,KAClBuC,EACE,yFAEK,GAKW,iEAOlBF,GAAW,GAPO,SFnBMlD,EE2BJyC,EF3BcjC,EE2BJmC,EF3BckB,EE2BJd,EF1BrCxD,IAAMkB,KAAKzB,EAAM,SAAU,CAChC8E,KAAM,gBACN9D,WACAQ,WACAqD,qBEcoB,wBASZtD,EAAMkC,EAAUE,GATJ,QAUlB1D,IACAsE,GAAQxD,KACRsD,EAAS,IAAK,CAAEU,SAAS,IAZP,kDAclBX,EAAQ,UAAC,KAAGY,gBAAJ,aAAC,EAAa5D,MAdJ,yBAgBlB8C,GAAW,GAhBO,+CFnBK,IAAClD,EAAUQ,EAAUqD,IEmB1B,2BAAH,sDAoBnB,OACE,cAACI,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,SACE,sBAAKC,UAAWnC,EAAQhB,MAAxB,UACE,cAACoD,EAAA,EAAD,CAAQD,UAAWnC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC+C,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,qBAGA,uBAAMH,UAAWnC,EAAQJ,KAAM2C,YAAU,EAACC,SAAUhB,GAApD,UACE,cAACiB,EAAA,EAAD,CAAKC,QAAS,EAAGC,OAAkB,OAAVzB,EAAzB,SACE,cAAC0B,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB3B,MAE3B,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,EAAzB,UACE,cAAC4D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,MAAOjD,EACPkD,SAAU,SAACjC,GAAD,OAAWhB,EAAYgB,EAAMkC,OAAOF,YAGlD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,eACNzB,KAAK,WACLwB,GAAG,WACHG,aAAa,mBACbC,MAAO/C,EACPgD,SAAU,SAACjC,GAAD,OAAWd,EAAYc,EAAMkC,OAAOF,YAGlD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTG,KAAK,kBACLD,MAAM,mBACNzB,KAAK,WACLwB,GAAG,kBACHI,MAAO7C,EACP8C,SAAU,SAACjC,GAAD,OAAWZ,EAAmBY,EAAMkC,OAAOF,YAGzD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,mBACHC,MAAM,mBACNC,KAAK,mBACLC,aAAa,mBACbC,MAAO3C,EACP4C,SAAU,SAACjC,GAAD,OAAWV,EAAoBU,EAAMkC,OAAOF,eAI5D,cAACG,EAAA,EAAD,CACE/B,KAAK,SACLuB,WAAS,EACTd,QAAQ,YACRuB,MAAM,UACN1B,UAAWnC,EAAQF,OACnBgE,SAAU9C,EANZ,SAQGA,EAAU,cAAC+C,EAAA,EAAD,IAAuB,mBAEpC,eAACjB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAQ,gBAAxB,UACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CACEhC,UAAWiC,IACX5B,QAAQ,QACR6B,GAAG,uBAHL,mCAQF,cAACrB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CAAMhC,UAAWiC,IAAYC,GAAG,SAAS7B,QAAQ,QAAjD,2DCnKd,IAAMzD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASkF,IACtB,IAAMpE,EAAUnB,IADc,EAGEyB,mBAAS,IAHX,mBAGvBE,EAHuB,KAGbC,EAHa,OAIEH,mBAAS,IAJX,mBAIvBI,EAJuB,KAIbC,EAJa,OAKAL,oBAAS,GALT,mBAKvBU,EALuB,KAKdC,EALc,OAMJX,mBAAS,MANL,mBAMvBY,EANuB,KAMhBC,EANgB,KAOtBG,EAAYC,qBAAW7C,GAAvB4C,QAEFF,EAAWC,cAEXgD,EAAY,uCAAG,WAAO5C,GAAP,iBAAA5D,EAAA,6DACnB4D,EAAMC,iBADa,SAGjBT,GAAW,GAHM,SAIX3C,EAAMkC,EAAUE,GAJL,OAKjB1D,IACAsE,EAAQxD,KACRsD,EAAS,IAAK,CAAEU,SAAS,IAPR,kDASe,+BAA5B,eAAGC,gBAAH,mBAAa5D,YAAb,eAAmBmG,OACrBlD,EAAS,UAAW,CAClBmD,MAAO,CACL/D,cAINW,EAAS,KAAGY,SAAS5D,KAAKqG,SAhBT,yBAkBjBvD,GAAW,GAlBM,6EAAH,sDAsBlB,OACE,cAACe,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,SACE,sBAAKC,UAAWnC,EAAQhB,MAAxB,UACE,cAACoD,EAAA,EAAD,CAAQD,UAAWnC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC+C,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,mBAGA,uBAAMH,UAAWnC,EAAQJ,KAAM2C,YAAU,EAACC,SAAU6B,EAApD,UACE,cAAC5B,EAAA,EAAD,CAAKC,QAAS,EAAGC,OAAkB,OAAVzB,EAAzB,SACE,cAAC0B,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB3B,MAE3B,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,EAAzB,UACE,cAAC4D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,MAAOjD,EACPkD,SAAU,SAACjC,GAAD,OAAWhB,EAAYgB,EAAMkC,OAAOF,YAGlD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNzB,KAAK,WACLwB,GAAG,WACHG,aAAa,mBACbC,MAAO/C,EACPgD,SAAU,SAACjC,GAAD,OAAWd,EAAYc,EAAMkC,OAAOF,eAIpD,cAACG,EAAA,EAAD,CACE/B,KAAK,SACLuB,WAAS,EACTd,QAAQ,YACRuB,MAAM,UACN1B,UAAWnC,EAAQF,OACnBgE,SAAU9C,EANZ,SAQGA,EAAU,cAAC+C,EAAA,EAAD,IAAuB,UAEpC,cAACjB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAQ,gBAAxB,SACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CACEhC,UAAWiC,IACXC,GAAG,mBACH7B,QAAQ,QAHV,yC,aC/GCmC,EARQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,4BAEhD,OADiBpD,qBAAW7C,GAApBkG,KAEC,cAAC,IAAD,2BAAWD,GAAX,aAAkBD,KAEpB,cAAC,IAAD,CAAUP,GAAG,Y,oCCwIPU,EA3IG,WAAO,IAAD,EACEvE,mBAAS,MADX,mBACfnC,EADe,KACT2G,EADS,OAEQxE,oBAAS,GAFjB,mBAEfU,EAFe,KAENC,EAFM,KAIG8D,EAAaC,cAA9BC,gBAERC,qBAAU,YACO,uCAAG,8BAAArH,EAAA,+EL4DbP,IAAMiD,IAAIxD,EAAM,iBK5DH,gBAENoB,EAFM,EAENA,KACR2G,EAAQ3G,GAHM,gDAKd4G,EAAS,wBAAyB,CAAEzC,QAAS,UAL/B,yBAOdrB,GAAW,GAPG,4EAAH,qDAUfkE,KACC,CAACJ,IAEJ,IAAMK,EAAU,CACd,CAAEC,MAAO,aAAcC,MAAO,aAC9B,CACED,MAAO,cACPC,MAAO,aACPC,cAAe,SAACC,GAAD,OACb,cAACtC,EAAA,EAAD,CACEuC,WAAS,EACTrC,WAAS,EACTK,MAAO+B,EAAM/B,MACbC,SAAU,SAACgC,GAAD,OAAOF,EAAM9B,SAASgC,EAAE/B,OAAOF,aA6C3CkC,EAAY,uCAAG,WAAOC,EAASC,GAAhB,eAAAhI,EAAA,6DACnBoD,GAAW,GADQ,gBAGb6E,EAHa,eAGG3H,IACJ0H,EAAQE,WACxBD,EAAQ,2BAAMF,EAAQG,UAAYH,EAAQI,YAAeF,GALxC,SAMXrH,EAAWqH,GANA,OAOjBhB,EAAQgB,GACRf,EAAS,6BAA8B,CAAEzC,QAAS,YARjC,kDAUjByC,EAAS,uBAAwB,CAAEzC,QAAS,UAV3B,yBAYjBrB,GAAW,GAZM,6EAAH,wDAgBZgF,EAAY,uCAAG,WAAOJ,GAAP,eAAAhI,EAAA,6DACnBoD,GAAW,GADQ,gBAGX6E,EAHW,eAGK3H,IACN0H,EAAQE,WAJP,SAKXtH,EAAWqH,GALA,OAMjBhB,EAAQgB,GACRf,EAAS,6BAA8B,CAAEzC,QAAS,YAPjC,kDASjByC,EAAS,yBAA0B,CAAEzC,QAAS,UAT7B,yBAWjBrB,GAAW,GAXM,6EAAH,sDAoBlB,OACE,cAACwB,EAAA,EAAD,CAAKlD,OAAQ,EAAb,SACE,eAACyC,EAAA,EAAD,CAAWE,SAAS,KAApB,UACE,cAACO,EAAA,EAAD,CAAKC,QAAS,EAAGvD,QAAQ,OAAO+G,eAAe,WAA/C,SACE,cAACtC,EAAA,EAAD,CAAQtB,QAAQ,YAAYuB,MAAM,UAAUsC,QAT/B,WACnB/I,aAAagJ,QACbC,OAAOpG,SAAW,2BAOZ,sBAIF,cAAC,IAAD,CACEoF,MAAM,YACND,QAASA,EACTjH,KAtFQ,WACd,IAAMmI,EAAQ,GACd,GAAa,OAATnI,EACF,OAAOmI,EAET,IAAK,IAAIC,KAAOpI,EAEJ,YAARoI,GACQ,cAARA,GACQ,UAARA,GACQ,UAARA,GAEAD,EAAME,KAAK,CACTT,UAAWQ,EACXP,WAAY7H,EAAKoI,KAIvB,OAAOD,EAoEKG,GACNC,QAAS,CACPC,oBAAqB,EACrBC,cAAe,KAEjBC,UAAW7F,EACX8F,SAAU,CAERC,YAAa,SAACnB,EAASC,GAAV,OAAsBF,EAAaC,EAASC,IACzDmB,YAAa,SAACnB,GAAD,OAAaI,EAAaJ,aC1H7ChH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAAS+H,IACtB,IAAMjH,EAAUnB,IADuB,EAGPyB,mBAAS,IAHF,mBAGhCE,EAHgC,KAGtBC,EAHsB,OAITH,oBAAS,GAJA,mBAIhCU,EAJgC,KAIvBC,EAJuB,OAKbX,mBAAS,MALI,mBAKhCY,EALgC,KAKzBC,EALyB,KAOjCC,EAAWC,cAEXgD,EAAY,uCAAG,WAAO5C,GAAP,SAAA5D,EAAA,6DACnBsD,EAAS,MACTM,EAAMC,iBAFa,SAIjBT,GAAW,GAJM,SNgBQlD,EMXJyC,ENYlBlD,IAAMkB,KAAKzB,EAAM,iBAAkB,CAAEgB,aMjBvB,OAMjBqD,EAAS,mBANQ,gDAQjBD,EAAS,KAAGY,SAAS5D,KAAKqG,SART,yBAUjBvD,GAAW,GAVM,+CNgBO,IAAClD,IMhBR,0BAAH,sDAclB,OACE,cAACiE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,SACE,sBAAKC,UAAWnC,EAAQhB,MAAxB,UACE,cAACoD,EAAA,EAAD,CAAQD,UAAWnC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC+C,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,6BAGA,uBAAMH,UAAWnC,EAAQJ,KAAM2C,YAAU,EAACC,SAAU6B,EAApD,UACE,cAAC5B,EAAA,EAAD,CAAKC,QAAS,EAAGC,OAAkB,OAAVzB,EAAzB,SACE,cAAC0B,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB3B,MAE3B,cAAC4B,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,EAAzB,SACE,cAAC4D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,MAAOjD,EACPkD,SAAU,SAACjC,GAAD,OAAWhB,EAAYgB,EAAMkC,OAAOF,cAIpD,cAACG,EAAA,EAAD,CACE/B,KAAK,SACLuB,WAAS,EACTd,QAAQ,YACRuB,MAAM,UACN1B,UAAWnC,EAAQF,OACnBgE,SAAU9C,EANZ,SAQGA,EAAU,cAAC+C,EAAA,EAAD,IAAuB,oBAEpC,cAACjB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAQ,gBAAxB,SACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CAAMhC,UAAWiC,IAAYC,GAAG,SAAS7B,QAAQ,QAAjD,uCCnFd,IAAMzD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASgI,IACtB,IAAMlH,EAAUnB,IAD2B,EAGXyB,mBAAS,IAHE,mBAGpCE,EAHoC,KAG1BC,EAH0B,OAIbH,oBAAS,GAJI,mBAIpCU,EAJoC,KAI3BC,EAJ2B,OAKjBX,mBAAS,MALQ,mBAKpCY,EALoC,KAK7BC,EAL6B,KAOrCC,EAAWC,cAEXgD,EAAY,uCAAG,WAAO5C,GAAP,SAAA5D,EAAA,6DACnBsD,EAAS,MACTM,EAAMC,iBAFa,SAIjBT,GAAW,GAJM,SP4CYlD,EOvCJyC,EPwCtBlD,IAAMkB,KAAKzB,EAAM,SAAU,CAAE8E,KAAM,qBAAsB9D,aO7C3C,OAMjBqD,EAAS,WANQ,gDAQjBD,EAAS,KAAGY,SAAS5D,MARJ,yBAUjB8C,GAAW,GAVM,+CP4CW,IAAClD,IO5CZ,0BAAH,sDAclB,OACE,cAACiE,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,SACE,sBAAKC,UAAWnC,EAAQhB,MAAxB,UACE,cAACoD,EAAA,EAAD,CAAQD,UAAWnC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC+C,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,iCAGA,uBAAMH,UAAWnC,EAAQJ,KAAM2C,YAAU,EAACC,SAAU6B,EAApD,UACE,cAAC5B,EAAA,EAAD,CAAKC,QAAS,EAAGC,OAAkB,OAAVzB,EAAzB,SACE,cAAC0B,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB3B,MAE3B,cAAC4B,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,EAAzB,SACE,cAAC4D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,MAAOjD,EACPkD,SAAU,SAACjC,GAAD,OAAWhB,EAAYgB,EAAMkC,OAAOF,cAIpD,cAACG,EAAA,EAAD,CACE/B,KAAK,SACLuB,WAAS,EACTd,QAAQ,YACRuB,MAAM,UACN1B,UAAWnC,EAAQF,OACnBgE,SAAU9C,EANZ,SAQGA,EAAU,cAAC+C,EAAA,EAAD,IAAuB,sBAEpC,cAACjB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAQ,gBAAxB,SACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CAAMhC,UAAWiC,IAAYC,GAAG,UAAU7B,QAAQ,QAAlD,wCClFd,IAAM1D,EAAiB,gGAEjBC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASiI,KACtB,IAAMnH,EAAUnB,KACVoB,EAAWC,cACXC,EAAS,IAAIC,gBAAgBH,EAASI,QAHN,EAKNC,mBAASH,EAAOI,IAAI,aAAe,IAL7B,mBAK/BC,EAL+B,KAKrBC,EALqB,OAMNH,mBAAS,IANH,mBAM/BI,EAN+B,KAMrBC,EANqB,OAOQL,mBAAS,IAPjB,mBAO/BM,EAP+B,KAOdC,EAPc,OAQUP,mBAC9CH,EAAOI,IAAI,qBAAuB,IATE,mBAQ/BO,EAR+B,KAQbC,EARa,OAWRT,oBAAS,GAXD,mBAW/BU,EAX+B,KAWtBC,EAXsB,OAYZX,mBAAS,MAZG,mBAY/BY,EAZ+B,KAYxBC,EAZwB,KAchCC,EAAWC,cAETC,EAAYC,qBAAW7C,GAAvB4C,QAgBFE,GAAa,uCAAG,WAAOC,GAAP,iBAAA5D,EAAA,yDACpBsD,EAAS,MACTM,EAAMC,iBAfFhB,IAAaE,GACfO,EAAS,yBACF,GAEJT,EAASiB,MAAM/C,KAClBuC,EACE,yFAEK,GAKW,iEAOlBF,GAAW,GAPO,SRNOlD,EQcJyC,ERdc4G,EQcJ1G,ERdiB2G,EQcPvG,ERbtCxD,IAAMY,IAAInB,EAAM,iBAAkB,CACvCgB,WACAqJ,cACAC,qBQEoB,wBASZ/I,EAAMkC,EAAUE,GATJ,QAUlB1D,IACAsE,EAAQxD,KACRsD,EAAS,IAAK,CAAEU,SAAS,IAZP,kDAclBX,EAAQ,UAAC,KAAGY,gBAAJ,iBAAC,EAAa5D,YAAd,aAAC,EAAmBqG,SAdV,yBAgBlBvD,GAAW,GAhBO,+CRNM,IAAClD,EAAUqJ,EAAaC,IQM9B,2BAAH,sDAoBnB,OACE,cAACrF,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,SACE,sBAAKC,UAAWnC,EAAQhB,MAAxB,UACE,cAACoD,EAAA,EAAD,CAAQD,UAAWnC,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC+C,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,4BAGA,uBAAMH,UAAWnC,EAAQJ,KAAM2C,YAAU,EAACC,SAAUhB,GAApD,UACE,cAACiB,EAAA,EAAD,CAAKC,QAAS,EAAGC,OAAkB,OAAVzB,EAAzB,SACE,cAAC0B,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB3B,MAE3B,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAAC7D,QAAS,EAAzB,UACE,cAAC4D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,MAAOjD,EACPkD,SAAU,SAACjC,GAAD,OAAWhB,EAAYgB,EAAMkC,OAAOF,YAGlD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,eACNzB,KAAK,WACLwB,GAAG,WACHG,aAAa,mBACbC,MAAO/C,EACPgD,SAAU,SAACjC,GAAD,OAAWd,EAAYc,EAAMkC,OAAOF,YAGlD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTG,KAAK,kBACLD,MAAM,mBACNzB,KAAK,WACLwB,GAAG,kBACHI,MAAO7C,EACP8C,SAAU,SAACjC,GAAD,OAAWZ,EAAmBY,EAAMkC,OAAOF,YAGzD,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEZ,QAAQ,WACRa,UAAQ,EACRC,WAAS,EACTC,GAAG,mBACHC,MAAM,mBACNC,KAAK,mBACLC,aAAa,mBACbC,MAAO3C,EACP4C,SAAU,SAACjC,GAAD,OAAWV,EAAoBU,EAAMkC,OAAOF,eAI5D,cAACG,EAAA,EAAD,CACE/B,KAAK,SACLuB,WAAS,EACTd,QAAQ,YACRuB,MAAM,UACN1B,UAAWnC,EAAQF,OACnBgE,SAAU9C,EANZ,SAQGA,EAAU,cAAC+C,EAAA,EAAD,IAAuB,kBAEpC,eAACjB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAQ,gBAAxB,UACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CACEhC,UAAWiC,IACX5B,QAAQ,QACR6B,GAAG,mBAHL,2BAQF,cAACrB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CAAMhC,UAAWiC,IAAYC,GAAG,SAAS7B,QAAQ,QAAjD,2DCvKd,IAuCegF,GAvCH,WACVpC,qBAAU,YACK,uCAAG,sBAAArH,EAAA,+EAEND,IAFM,sDAIZR,aAAagJ,QACbC,OAAOpG,SAAW,SALN,wDAAH,qDAQbsH,KACC,IAXa,MAYQjH,mBAASxC,GAZjB,mBAYT8G,EAZS,KAYHtD,EAZG,KAahB,OACE,cAAC5C,EAAY8I,SAAb,CAAsB/D,MAAO,CAAEmB,OAAMtD,WAArC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmG,KAAK,sBAAZ,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,mBAAZ,SACE,cAACR,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,kBAAZ,SACE,cAACN,GAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,UAAZ,SACE,cAAC1H,EAAD,MAEF,cAAC,IAAD,CAAO0H,KAAK,SAAZ,SACE,cAACrD,EAAD,MAEF,cAAC,EAAD,CAAgBqD,KAAK,IAArB,SACE,cAAC,EAAD,YChCKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAkBC,SAAU,EAA5B,SACE,cAAC,GAAD,UAINC,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.00f0d9f4.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst url = \"https://p8fvjm8zb3.execute-api.eu-west-1.amazonaws.com/Prod/\";\r\n\r\nexport const setToken = () => {\r\n  const token = JSON.parse(localStorage.getItem(\"token\"));\r\n  if (token !== null) {\r\n    Axios.defaults.headers.common[\"Authorization\"] = token.idToken.jwtToken;\r\n  }\r\n};\r\n\r\nsetToken();\r\n// Axios.interceptors.response.use(response => response, async error => {\r\n//     const originalRequest = error.config;\r\n//     if(error.response.status === 401 && !originalRequest._retry)\r\n//     {\r\n//         originalRequest._retry = true;\r\n//         try{\r\n//         const {data} = await refreshToken();\r\n//         localStorage.setItem('token', data);\r\n//         Axios.defaults.headers.common['Authorization'] = data.idToken.jwtToken;\r\n//         return Axios.request(originalRequest);\r\n//         }\r\n//         catch(ex)\r\n//         {\r\n//             return Promise.reject(error);\r\n//         }\r\n//     }\r\n// });\r\n\r\nexport const refreshToken = async () => {\r\n  const token = getUser();\r\n  if (token === null) {\r\n    return;\r\n  }\r\n  const Username = token.idToken.payload.email;\r\n  const refreshToken = token.refreshToken;\r\n  const { data } = await Axios.put(url + \"SignIn\", { Username, refreshToken });\r\n  localStorage.setItem(\"token\", JSON.stringify(data));\r\n  Axios.defaults.headers.common[\"Authorization\"] = data.idToken.jwtToken;\r\n};\r\n\r\nexport const login = async (Username, Password) => {\r\n  const { data } = await Axios.post(url + \"SignIn\", { Username, Password });\r\n  localStorage.setItem(\"token\", JSON.stringify(data));\r\n};\r\n\r\nexport const signup = (Username, Password) => {\r\n  return Axios.post(url + \"SignUp\", { type: \"SignUp\", Username, Password });\r\n};\r\n\r\nexport const confirmSignup = (Username, Password, ConfirmationCode) => {\r\n  return Axios.post(url + \"SignUp\", {\r\n    type: \"confirmSignUp\",\r\n    Username,\r\n    Password,\r\n    ConfirmationCode,\r\n  });\r\n};\r\n\r\nexport const forgotPassword = (Username) => {\r\n  return Axios.post(url + \"ForgotPassword\", { Username });\r\n};\r\n\r\nexport const setNewPassword = (Username, newPassword, verificationCode) => {\r\n  return Axios.put(url + \"ForgotPassword\", {\r\n    Username,\r\n    newPassword,\r\n    verificationCode,\r\n  });\r\n};\r\n\r\nexport const getData = () => {\r\n  return Axios.get(url + \"bvClientsData\");\r\n};\r\n\r\nexport const updateData = (data) => {\r\n  return Axios.post(url + \"bvClientsData\", { ...data });\r\n};\r\n\r\nexport const getUser = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token === null) {\r\n    return null;\r\n  }\r\n  return JSON.parse(localStorage.getItem(\"token\"));\r\n};\r\n\r\nexport const resendConfirmation = (Username) => {\r\n  return Axios.post(url + \"SignUp\", { type: \"resendConfirmation\", Username });\r\n};\r\n","import { createContext } from \"react\";\nexport const UserContext = createContext(null);\n","import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { confirmSignup, getUser, setToken, login } from \"./service\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[\\^$*.[\\]{}()?\\-“!@#%&/,><’:;|_~`])\\S{8,99}$/;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n\r\n  const [username, setUsername] = useState(params.get(\"username\") || \"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmationCode, setConfirmationCode] = useState(\r\n    params.get(\"confirmationCode\") || \"\"\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  const validatePassword = () => {\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords don't match\");\r\n      return false;\r\n    }\r\n    if (!password.match(PASSWORD_REGEX)) {\r\n      setError(\r\n        \"Password must contain 1 capital letter. 1 small letter. 1 number. 1 special character\"\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleConfirm = async (event) => {\r\n    setError(null);\r\n    event.preventDefault();\r\n    if (!validatePassword()) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      await confirmSignup(username, password, confirmationCode);\r\n      await login(username, password);\r\n      setToken();\r\n      setUser(getUser());\r\n      navigate(\"/\", { replace: true });\r\n    } catch (ex) {\r\n      setError(ex.response?.data);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleConfirm}>\r\n          <Box marginY={2} hidden={error === null ? true : false}>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"confirmationCode\"\r\n                label=\"ConfirmationCode\"\r\n                name=\"confirmationCode\"\r\n                autoComplete=\"confirmationCode\"\r\n                value={confirmationCode}\r\n                onChange={(event) => setConfirmationCode(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress /> : \"Confirm Signup\"}\r\n          </Button>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Link\r\n                component={RouterLink}\r\n                variant=\"body2\"\r\n                to=\"/resend-confirmation\"\r\n              >\r\n                Resend Confirmation\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { getUser, login, setToken } from \"./service\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { UserContext } from \"./UserContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { setUser } = useContext(UserContext);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      setLoading(true);\n      await login(username, password);\n      setToken();\n      setUser(getUser());\n      navigate(\"/\", { replace: true });\n    } catch (ex) {\n      if (ex.response?.data?.code === \"UserNotConfirmedException\") {\n        navigate(\"/signup\", {\n          state: {\n            username,\n          },\n        });\n      }\n      setError(ex.response.data.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <Box marginY={2} hidden={error === null ? true : false}>\n            <Alert severity=\"error\">{error}</Alert>\n          </Box>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={loading}\n          >\n            {loading ? <CircularProgress /> : \"Login\"}\n          </Button>\n          <Grid container justify=\"space-between\">\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/forgot-password\"\n                variant=\"body2\"\n              >\n                Forgot Password\n              </Link>\n            </Grid>\n            {/* <Grid item>\n              <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\n                Don't have an account? Sign Up\n              </Link>\n            </Grid> */}\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import { useContext } from \"react\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport { UserContext } from \"./UserContext\";\n\nconst ProtectedRoute = ({ children, ...rest }) => {\n  const { user } = useContext(UserContext);\n  if (user) {\n    return <Route {...rest}>{children}</Route>;\n  }\n  return <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;\n","import { Box, Button, Container, TextField } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getData, updateData } from \"./service\";\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { enqueueSnackbar: snackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await getData();\r\n        setData(data);\r\n      } catch (ex) {\r\n        snackbar(\"Unable to fetch data.\", { variant: \"error\" });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [snackbar]);\r\n\r\n  const columns = [\r\n    { title: \"Field Name\", field: \"fieldName\" },\r\n    {\r\n      title: \"Field Value\",\r\n      field: \"fieldValue\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          multiline\r\n          fullWidth\r\n          value={props.value}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const mapData = () => {\r\n    const array = [];\r\n    if (data === null) {\r\n      return array;\r\n    }\r\n    for (var key in data) {\r\n      if (\r\n        key !== \"UserSub\" &&\r\n        key !== \"bv_client\" &&\r\n        key !== \"email\" &&\r\n        key !== \"Table\"\r\n      ) {\r\n        array.push({\r\n          fieldName: key,\r\n          fieldValue: data[key],\r\n        });\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const handleAdd = async (newData) => {\r\n    setLoading(true);\r\n    try {\r\n      let prevData = { ...data };\r\n      prevData = {\r\n        [newData.fieldName]: newData.fieldValue,\r\n        ...prevData,\r\n      };\r\n      await updateData(prevData);\r\n      setData(prevData);\r\n      snackbar(\"Data added successfully.\", { variant: \"success\" });\r\n    } catch (ex) {\r\n      snackbar(\"Unable to add new data.\", { variant: \"error\" });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (newData, oldData) => {\r\n    setLoading(true);\r\n    try {\r\n      let prevData = { ...data };\r\n      delete prevData[oldData.fieldName];\r\n      prevData = { [newData.fieldName]: newData.fieldValue, ...prevData };\r\n      await updateData(prevData);\r\n      setData(prevData);\r\n      snackbar(\"Data updated successfully.\", { variant: \"success\" });\r\n    } catch (ex) {\r\n      snackbar(\"Unable to edit data.\", { variant: \"error\" });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (oldData) => {\r\n    setLoading(true);\r\n    try {\r\n      const prevData = { ...data };\r\n      delete prevData[oldData.fieldName];\r\n      await updateData(prevData);\r\n      setData(prevData);\r\n      snackbar(\"Data deleted successfully.\", { variant: \"success\" });\r\n    } catch (ex) {\r\n      snackbar(\"Unable to delete data.\", { variant: \"error\" });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    window.location = \"https://www.bonovox.net\";\r\n  };\r\n\r\n  return (\r\n    <Box margin={2}>\r\n      <Container maxWidth=\"md\">\r\n        <Box marginY={2} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Box>\r\n        <MaterialTable\r\n          title=\"Dashboard\"\r\n          columns={columns}\r\n          data={mapData()}\r\n          options={{\r\n            actionsColumnIndex: -1,\r\n            maxBodyHeight: 500,\r\n          }}\r\n          isLoading={loading}\r\n          editable={{\r\n            // onRowAdd: (newData) => handleAdd(newData),\r\n            onRowUpdate: (newData, oldData) => handleUpdate(newData, oldData),\r\n            onRowDelete: (oldData) => handleDelete(oldData),\r\n          }}\r\n        />\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { forgotPassword } from \"./service\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    setError(null);\r\n    event.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      await forgotPassword(username);\r\n      navigate(\"/reset-password\");\r\n    } catch (ex) {\r\n      setError(ex.response.data.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Send Reset Link\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Box marginY={2} hidden={error === null ? true : false}>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress /> : \"Send Reset Link\"}\r\n          </Button>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n                Back to Login\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { resendConfirmation } from \"./service\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResendConfirmation() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    setError(null);\r\n    event.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      await resendConfirmation(username);\r\n      navigate(\"/signup\");\r\n    } catch (ex) {\r\n      setError(ex.response.data);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Resend Confirmation\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Box marginY={2} hidden={error === null ? true : false}>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress /> : \"Send Confirmation\"}\r\n          </Button>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\r\n                Back to Signup\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { setNewPassword, getUser, setToken, login } from \"./service\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[\\^$*.[\\]{}()?\\-“!@#%&/,><’:;|_~`])\\S{8,99}$/;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function ResetPassword() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n\r\n  const [username, setUsername] = useState(params.get(\"username\") || \"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmationCode, setConfirmationCode] = useState(\r\n    params.get(\"confirmationCode\") || \"\"\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  const validatePassword = () => {\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords don't match\");\r\n      return false;\r\n    }\r\n    if (!password.match(PASSWORD_REGEX)) {\r\n      setError(\r\n        \"Password must contain 1 capital letter. 1 small letter. 1 number. 1 special character\"\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleConfirm = async (event) => {\r\n    setError(null);\r\n    event.preventDefault();\r\n    if (!validatePassword()) {\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      await setNewPassword(username, password, confirmationCode);\r\n      await login(username, password);\r\n      setToken();\r\n      setUser(getUser());\r\n      navigate(\"/\", { replace: true });\r\n    } catch (ex) {\r\n      setError(ex.response?.data?.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleConfirm}>\r\n          <Box marginY={2} hidden={error === null ? true : false}>\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(event) => setConfirmPassword(event.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"confirmationCode\"\r\n                label=\"ConfirmationCode\"\r\n                name=\"confirmationCode\"\r\n                autoComplete=\"confirmationCode\"\r\n                value={confirmationCode}\r\n                onChange={(event) => setConfirmationCode(event.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress /> : \"Confirm Reset\"}\r\n          </Button>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Link\r\n                component={RouterLink}\r\n                variant=\"body2\"\r\n                to=\"/forgot-password\"\r\n              >\r\n                Resend Link\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import { Route, Routes } from \"react-router-dom\";\r\nimport SignUp from \"./Signup\";\r\nimport Login from \"./Login\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { getUser, refreshToken } from \"./service\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport ResendConfirmation from \"./ResendConfirmation\";\r\nimport ResetPassword from \"./ResetPassword\";\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    const refresh = async () => {\r\n      try {\r\n        await refreshToken();\r\n      } catch (ex) {\r\n        localStorage.clear();\r\n        window.location = \"/login\";\r\n      }\r\n    };\r\n    refresh();\r\n  }, []);\r\n  const [user, setUser] = useState(getUser);\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      <Routes>\r\n        <Route path=\"resend-confirmation\">\r\n          <ResendConfirmation />\r\n        </Route>\r\n        <Route path=\"/forgot-password\">\r\n          <ForgotPassword />\r\n        </Route>\r\n        <Route path=\"/reset-password\">\r\n          <ResetPassword />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <ProtectedRoute path=\"/\">\r\n          <Dashboard />\r\n        </ProtectedRoute>\r\n      </Routes>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}